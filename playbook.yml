---
- name: deploy apache in all hosts
  hosts: all
  become: true
  become_method: sudo
  vars_files:
    - "{{ansible_distribution}}-{{ansible_distribution_major_version}}.yml"
  roles: 
    - role: apache

# - name: configure reverse_proxy
#   hosts: centos6
#   vars_file:
#     - "{{ansible_distribution}}-{{ansible_distribution_major_version}}.yml"
#   include_role:
#     name: load-balancer
#     tasks_from: reverse_proxy

# - name: configure load-balance mod jk
#   hosts: centos6
#   vars_file:
#     - "{{ansible_distribution}}-{{ansible_distribution_major_version}}.yml"
#   tasks:
#     - name: mod jk file
#       include_role:
#         name: load-balancer
#         tasks_from: jk_module
        
#   tags: jkmod

- name: Deploy Java
  hosts: workers
  become: true
  become_method: sudo
  tasks:
    - name: Install Java 1.7
      yum:
        name: java-1.7.0-openjdk
        state: present
  tags: java

- name: deploy 2 TDS instances in Workers
  become: true
  become_method: sudo
  hosts: workers
  vars:
    tomcat_instances:
      - name: foo
        service_name: tomcat@foo
        port_ajp: 18009
        port_connector: 18080
        port_redirect: 18443 
        port_shutdown: 18005
        jvm_route: "{{ inventory_hostname }}1"
      - name: bar
        service_name: tomcat@bar
        port_ajp: 28009
        port_connector: 28080
        port_redirect: 28443
        port_shutdown: 28005
        jvm_route: "{{ inventory_hostname }}2"
  roles:
    - ansible-tomcat
  tags: deploy_tomcat

- name: jk workers
  become: true
  become_method: sudo
  hosts: workers
  vars_files:
    - "{{ansible_distribution}}-{{ansible_distribution_major_version}}.yml"
  roles: 
    - load-balancer
  tags: jk_workers

- name: Deploy nginx in CentOS 6
  become: true
  become_method: sudo
  hosts: centos6
  vars:
    nginx_http_params:
      - sendfile "on"
      - access_log "/var/log/nginx/access.log"
    nginx_sites:
      bar:
        template: load-balancer.conf.j2
        server_name: localhost
        server_ip: "{{hostvars[inventory_hostname]['ip_address']}}"
        server_port: 8080
        backend_name: tomcat
        backends:
          - name: w11
            backend: "{{hostvars['worker1']['ip_address']}}"
            backend_port: 18080
          - name: w12
            backend: "{{hostvars['worker1']['ip_address']}}"
            backend_port: 28080
          - name: w21
            backend: "{{hostvars['worker2']['ip_address']}}"
            backend_port: 18080
          - name: w22
            backend: "{{hostvars['worker2']['ip_address']}}"
            backend_port: 28080
  roles:
    - ansible-role-nginx
  tags: nginx

- name: HAProxy in workers
  hosts: worker2
  vars:
    haproxy_configs:
      loadbalance:
        haproxy_port: 8080
        balance_directive: leastconn
        servers:
          - name: "{{hostvars['centos6']['inventory_hostname']}}-httpd"
            ip: "{{hostvars['centos6']['ip_address']}}"
            port: "{{hostvars['centos6']['httpd_port']}}"
          - name: "{{hostvars['centos6']['inventory_hostname']}}-nginx"
            ip: "{{hostvars['centos6']['ip_address']}}"
            port: 8080
  roles:
    - HAproxy
  tags: haproxy