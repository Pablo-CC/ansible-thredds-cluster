- name: Gather facts on all hosts
  hosts: all
  connection: lxd
  gather_facts: True

- name: Deploy HAProxy on load balancer
  hosts: load-balancer
  connection: lxd
  roles:
          - role: haproxy-bin
          - role: haproxy-gateway-tds
  tags: [haproxy]
       
- name: Configure servers with Tomcat
  hosts: servers
  connection: lxd
  vars_files:
    - secret.yml
  vars:
    miniconda_python: 2
    miniconda_prefix: "{{ ansible_env.HOME }}/miniconda2"
    miniconda_env:
      name: udg
      dependencies:
        - libnetcdf=4.4.1
        - supervisor
    venv_home: "{{ miniconda_prefix }}/envs/{{ miniconda_env.name }}"
    using_containers: True
  roles:
    - role: virtualenv-conda
      tags: tds_deploy
    - role: supervisord
      tags: tds_deploy
    - role: tds
      tags: tds_deploy
    - role: haproxy-tds
      tags: [haproxy]
  tasks:
    - include_tasks: ../../../utils/test-authentication.yml
      vars:
        instances: "{{ tds_instances }}"
      tags: tds_deploy
    
    - name: restart tds instances
      supervisorctl:
        name: "{{ item.name }}"
        state: restarted
        username: "{{ supervisord_user | default(omit) }}"
        password: "{{ supervisord_password | default(omit) }}"
        supervisorctl_path: "{{ venv_home }}/bin/supervisorctl"
      with_items: "{{ tds_instances }}"
      tags: [restart, update_catalogs, tds_deploy]   
    
    - include_tasks: ../../../utils/server_icon.yml
      tags: [tds_deploy, icons]

- name: Start HAProxy
  hosts: load-balancer
  connection: lxd
  tasks:
    - name: Initiate haproxy if installed from sources
      command: "./haproxy -f {{ haproxy_conf_file }}"
      args:
        chdir: "{{ haproxy_path }}"
      when: haproxy_from_sources == True

    - name: Initiate haproxy if installed from binary file
      become: True
      command: "haproxy -f {{ hostvars[inventory_hostname].haproxy_conf_file }}"
      when: hostvars[inventory_hostname].haproxy_from_sources == False
