- hosts: all
  vars:
    root: "/tmp/sandbox"
    # roles customization
    tomcat_catalina_home: "{{ root }}/tomcat"
    miniconda_python: 2
    miniconda_prefix: "{{ tomcat_catalina_home }}/miniconda2"
    miniconda_env:
      name: udg
      dependencies:
        - libnetcdf=4.4.1
        - supervisor=3.1.3
    venv_home: "{{ miniconda_prefix }}/envs/{{ miniconda_env.name }}"
    
    ## secrets
    applications:
      supervisord:
        user: supervisor    
        password: supervisor

    ## collections
    collections:
      - path: udg-tds
        catalogs:
          src: "{{ catalogs_path | default('data/catalogs') }}"

    ## tds instances
    tds_debug: True
    tds_version: ESGF-5.0.1
    tds_instances:
      - name: instance1
        shutdown: 8089
        tds_content_root: "{{ root }}/content"
        connectors:
          - type: http
            port: '8080'
        replicas:
          - name: udg-tds

    ## datasets
    datasets:
      - src: "{{ datasets_path | default('data/datasets') }}"
        dest: '' # If empty, destination is content/thredds/public

    # toolsUI
    toolsUI_urlbase: https://artifacts.unidata.ucar.edu/repository/unidata-all/edu/ucar
    toolsUI_tool: toolsUI
    toolsUI_version: ESGF-5.0.1
    toolsUI_jar: "{{ toolsUI_tool }}-{{ toolsUI_version }}.jar"
    toolsUI_url: "{{ toolsUI_urlbase }}/{{ toolsUI_tool }}/{{ toolsUI_version }}/{{ toolsUI_jar }}"
    
  roles:
    - role: supervisord-conda
    - role: tds

  tasks:
    # toolsUI
    - name: Download toolsUI
      get_url:
        url: "{{ toolsUI_url }}"
        dest: "{{ root }}"

    - name: Template executables
      template:
        src: "{{ item.template }}"
        dest: "{{ root }}/{{ item.dest }}"
        mode: 0755
      with_items:
        - { template: ncjdump.j2, dest: ncjdump }
        - { template: toolsUI, dest: toolsUI }

    # FakeAuthorizer
    - name: Copy FakeAuthorizer.class in tds applicationContext.xml
      copy:
        src: FakeAuthorizer.class
        dest: "{{ tomcat_instances_path }}/{{ item.name }}/webapps/thredds/WEB-INF/classes/thredds/servlet/restrict/FakeAuthorizer.class"
      with_items: "{{ tds_instances }}"

    - name: Use FakeAuthorizer instead of TomcatAuthorizer in tds applicationContext.xml
      replace:
        regexp: '<bean id="restrictedDatasetAuthorizer" class="thredds.servlet.restrict.TomcatAuthorizer">'
        replace: '<bean id="restrictedDatasetAuthorizer" class="thredds.servlet.restrict.FakeAuthorizer">'
        path: "{{ tomcat_instances_path }}/{{ item.name }}/webapps/thredds/WEB-INF/applicationContext.xml"
      with_items: "{{ tds_instances }}"

    # management
    - name: Restart TDS
      supervisorctl:
        name: "{{ item.name }}"
        state: restarted
        supervisorctl_path: "{{ venv_home }}/bin/supervisorctl"
        username: "{{ applications.supervisord.user }}"
        password: "{{ applications.supervisord.password }}"
      with_items:
        - "{{ tds_instances }}"
      tags:
        - restart
        - update_catalogs
