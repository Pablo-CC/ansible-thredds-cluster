- name: Provision spock
  hosts: spock
  tasks:
    - yum:
        name: python-passlib
        
- hosts: spock
  vars:
    esg_root: "esgcet"

    # Vars for jk-gateway
    mod_jk_static_catalog: False
    mod_jk_configure: --with-apxs=/usr/sbin/apxs
    mod_jk_src: /opt/mod_jk
  vars_files:
    - secret.yml
  roles:
    - role: jk-gateway-tds
  tasks:
    # Include cluster conf into esgf-httpd.conf
    - name: Delete Include mod_jk.conf from jk-gateway role
      lineinfile:
        state: absent
        path: /etc/httpd/conf/esgf-httpd.conf
        regexp: Include /etc/httpd/conf.d/mod_jk.conf

    - name: Include mod_jk.conf in esgf-httpd.conf
      blockinfile:
        path: "/etc/httpd/conf/esgf-httpd.conf"
        insertbefore: 'VirtualHost \*:80'
        marker: "# {mark} Include jk"
        block: |
          Include /etc/httpd/conf.d/mod_jk.conf
          JkMountCopy All

    # Change directory of mod_jk.shm
    - name: Create directory for mod_jk.shm
      file: path="/var/run/mod_jk" state=directory

    - name: Change directory of JkShmFile in mod_jk.conf
      replace:
        path: "{{ mod_jk_conf_path }}/mod_jk.conf"
        regexp: "JkShmFile .*"
        replace: "JkShmFile /var/run/mod_jk/mod_jk.shm"

    # Indicate resources served by esgf's tds
    - name: Comment ProxyPass /thredds in esgf-httpd.conf
      replace:
        path: "/etc/httpd/conf/esgf-httpd.conf"
        regexp: "(ProxyPass /thredds\tajp://localhost:8223/thredds)"
        replace: '#\1'

    - name: Add ProxyPassMatch directives to esgf-httpd.conf
      blockinfile:
        path: "/etc/httpd/conf/esgf-httpd.conf"
        insertafter: '{{ item.string }}'
        marker: "# {mark} ProxyPassMatch {{ item.mark }}"
        block: |
          ProxyPassMatch ^/thredds/([^/]*)/{{ esg_root }}/(.*) ajp://localhost:8223/thredds/$1/{{ esg_root }}/$2
          ProxyPassMatch ^/thredds/catalog/([^/]*)$ ajp://localhost:8223/thredds/catalog/$1
          ProxyPassMatch ^/thredds/js/(.*)$ ajp://localhost:8223/thredds/js/$1
          ProxyPassMatch ^/thredds/style/(.*)$ ajp://localhost:8223/thredds/style/$1
      with_items:
        - { string: 'VirtualHost \*:80', mark: 80 }
        - { string: 'VirtualHost \*:443', mark: 443 }

    - name: Add DocumentRoot and Rewrite rules in VirtualHosts
      blockinfile:
        path: /etc/httpd/conf/esgf-httpd.conf
        insertafter: "{{ item.string }}"
        marker: "# {mark} General directives {{ item.mark }}"
        block: |
          DocumentRoot /var/www/html
          Options -Indexes
          RewriteEngine On
          RewriteRule /thredds$ /thredds/catalog/catalog.html [R]
          RewriteRule /thredds/$ /thredds/catalog/catalog.html [R]
      with_items:
        - { string: 'VirtualHost \*:80', mark: 80 }
        - { string: 'VirtualHost \*:443', mark: 443 }

    # Allow insecure ncss js resources
    - name: Allow insecure ncss js resources in esgf tomcat
      lineinfile:
        path: "/usr/local/tomcat/webapps/thredds/WEB-INF/web.xml"
        regexp: '<param-value>.*\(html\|xml\|css\|gif\|png\|jpg\|pdf\|asp\).*</param-value>'
        state: absent

    - lineinfile:
        path: "/usr/local/tomcat/webapps/thredds/WEB-INF/web.xml"
        line: '<param-value>"[^?]*/thredds/$","[^?]*catalog\.html;jsessionid=.*","[^?]*((/admin/)(.*)|(/remoteCatalogService\?.*)|(?&lt;=\.(html|xml|css|gif|png|jpg|pdf|asp|js))(\?.*)?)"</param-value>'
        state: present
        insertafter: '<param-name>authenticationNotRequiredPatterns</param-name>'

    # Add dataset_root
    - name: Create esgf directories dataset_roots
      file:
        state: directory
        path: "{{ item }}"
      with_items:
        - /esg/cordex
        - /esg/content/thredds/{{ esg_root }}
        
    - name: Add dataset_roots to esg.ini
      lineinfile:
        path: "/esg/config/esgcet/esg.ini"
        line: "\t{{ esg_root }} | /esg/cordex"
        insertafter: "\tesg_dataroot | /esg/data"

    - name: Add projects to esg.ini
      lineinfile:
        path: "/esg/config/esgcet/esg.ini"
        line: "\tcordex | CORDEX Project | 4"
        insertafter: "\ttest | Test Project | 3"

    - name: Modify esgf thredds_root in esg.ini
      replace:
        path: "/esg/config/esgcet/esg.ini"
        regexp: "thredds_root = /esg/content/thredds/esgcet"
        replace: "thredds_root = /esg/content/thredds/{{ esg_root }}"

    - name: Modify thredds_url in esg.ini
      replace:
        path: "/esg/config/esgcet/esg.ini"
        regexp: "thredds_url = http://{{ ansible_nodename }}/thredds/catalog/esgcet"
        replace: "thredds_url = http://{{ ansible_nodename }}/thredds/catalog/{{ esg_root }}"

    # udg-tds should be dynamic? - maybe a var/group-var in this playbook
    - name: Add catalog-ref to esgf node main catalog to point to udg tds instances
      lineinfile:
        path: "/esg/content/thredds/catalog.xml"
        line: '<catalogRef name="User Data Gateway Root Catalog" xlink:title="User Data Gateway catalog" xlink:href="udg-tds/catalog.xml"/>'
        insertbefore: "</catalog>"

    - name: Modify esg_root if needed
      replace:
        regexp: 'xlink:href="esgcet/catalog.xml"'
        replace: 'xlink:href="{{ esg_root }}/catalog.xml"'
        path: "/esg/content/thredds/catalog.xml"

    # copy esg.cordex.ini
    - copy:
        src: esg.cordex.ini
        dest: /esg/config/esgcet/esg.cordex.ini

    # add jna_path to esg_functions
    - name: Add jna.library.path to esg-functions
      lineinfile:
        path: "/usr/local/bin/esg-functions"
        line: -Djna.library.path=/usr/local/conda/envs/esgf-pub/lib/ \
        insertbefore: '        -Djava.awt.headless=true \\'
        
    - name: Apply changes to esgf configuration ini files
      shell: /usr/local/conda/envs/esgf-pub/bin/esginitialize -c
      args:
        executable: /bin/bash
      environment:
        UVCDAT_ANONYMOUS_LOG: "False"

    - name: Add /tds5 and /udg-tap urimaps
      blockinfile:
        path: /etc/httpd/conf.d/mod_jk.urimaps
        marker: "# {mark} tds5 udg-tap urimaps"
        block: |
          /udg-tap=tap
          /udg-tap/*=tap
          /tds5=tds5
          /tds5/*=tds5

- hosts: tds
  vars:
    proxy_name: "spock.meteo.unican.es" # where is this used?

    # TDS variables
    tds_download_url: "http://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/edu/ucar/tds/ESGF-5.0.1/tds-ESGF-5.0.1.war"
    tds_version: "ESGF-5.0.1"
    tds_filename: "tds-esgf.war"
  vars_files:
    - secret.yml
  roles:
    - role: virtualenv-conda
    - role: supervisord
    - role: tds-jk
  tasks:
    # Set SSL in applicationContext.xml
    - name: Set useSSL true in tds applicationContext.xml
      replace:
        regexp: '<property name="useSSL" value="false"/>'
        replace: '<property name="useSSL" value="true"/>'
        path: "{{ tomcat_base }}/{{ item.name }}/webapps/thredds/WEB-INF/applicationContext.xml"
      with_items: "{{ tds_instances }}"

    - name: Use port 8443 instead of 443 in tds applicationContext.xml
      replace:
        regexp: '<property name="sslPort" value="8443"/>'
        replace: '<property name="sslPort" value="443"/>'
        path: "{{ tomcat_base }}/{{ item.name }}/webapps/thredds/WEB-INF/applicationContext.xml"
      with_items: "{{ tds_instances }}"

    - name: Copy context.xml for tds instances
      copy:
        src: context.xml
        dest: "{{ tomcat_base }}/{{ item.name }}/conf/context.xml"
      with_items: "{{ tds_instances }}"

    - include_tasks: ../../utils/derby-authentication.yml
      vars:
        instances: "{{ tds_instances }}"

    # Java melody
    - include_tasks: '../../utils/java-melody.yml'

    # Restart services
    - name: restart httpd
      service:
        name: httpd
        state: restarted
      delegate_to: spock
      run_once: True
      tags: ['restart']
      ignore_errors: True

    - name: restart TDS instances
      supervisorctl:
        name: "{{ item.name }}"
        state: restarted
        supervisorctl_path: "{{ venv_home }}/bin/supervisorctl"
      with_items: "{{ tds_instances }}"
      ignore_errors: True
      tags:
        - restart
        - update_catalogs
