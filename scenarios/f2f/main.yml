- name: Set up the gateway
  hosts: gateway
  vars:
    # httpd is already installed, fill the interface
    httpd_root: /etc/httpd
    httpd_version: 2.2.15
    httpd_htdocs: /var/www/html
    httpd_conf_file: /etc/httpd/conf/esgf-httpd.conf
  roles:
    - role: gateway-proxy
  tasks:
    - name: Comment ProxyPass /thredds in esgf-httpd.conf
      replace:
        path: "{{ httpd_conf_file }}"
        regexp: "(ProxyPass /thredds\tajp://localhost:8223/thredds)"
        replace: '#\1'

    - name: Restart httpd
      service:
        name: httpd
        state: restarted
      tags: [never, restart]

- name: Set up backend servers
  hosts: backend
  vars:
    # Download TDS in the gateway fails because of selinux and local_action
    ansible_python_interpreter: /usr/bin/python
    
    # Miniconda variables
    miniconda_python: 2
    miniconda_env:
      name: f2f
      channels:
        - birdhouse
      dependencies:
        - libnetcdf=4.4.1
        - supervisor
        - apache-tomcat
    
    # TDS variables
    tds_download_url: "http://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/edu/ucar/tds/ESGF-5.0.1/tds-ESGF-5.0.1.war"
    tds_version: "ESGF-5.0.1"
    tds_filename: "tds-esgf.war"
  roles:
    - role: miniconda
    - role: supervisor-tds
    - role: tds-proxy
  tasks:
    - name: Synchronize thredds and esg-orp
      synchronize:
        src: "/usr/local/tomcat/webapps/{{ item.1 }}"
        dest: "{{ tomcat_base }}/{{ item.0.name }}/webapps/{{ item.1 }}"
      with_nested:
        - "{{ tds_instances}}"
        - ["thredds", "esg-orp"]
      
    - name: restart TDS instances
      supervisorctl:
        name: "{{ item.name }}"
        state: restarted
        supervisorctl_path: "{{ supervisor_home }}/bin/supervisorctl"
      with_items: "{{ tds_instances }}"
      ignore_errors: True
      tags: [never, restart]
