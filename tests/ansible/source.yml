- hosts: gateways
  vars:
    # required interface
    httpd_root: "{{ ansible_env.HOME }}/httpd"
    venv_home: "{{ ansible_env.HOME }}/virtualenv"
    
    httpd_user: ansible
    httpd_group: ansible
    mod_jk_status_user: proxy
    mod_jk_status_passwd: proxy
    mod_jk_configure: --prefix={{ httpd_root }}/modules --with-apxs={{ httpd_root }}/bin/apxs
  roles:
    - role: source
      dependencies: [supervisor, httpd, mod_jk]
    - role: httpd
    - role: gateway-jk
    - role: supervisor-httpd
  tasks:
    - name: restart httpd
      supervisorctl:
        name: httpd
        state: restarted
        username: "{{ supervisor_user | default(omit) }}"
        password: "{{ supervisor_password | default(omit) }}"
        supervisorctl_path: "{{ supervisor_bin }}/supervisorctl"
      tags: [never, restart]

- hosts: tds
  vars:
    # required interface
    jdk_root: "{{ ansible_env.HOME }}/jdk"
    tomcat_home: "{{ ansible_env.HOME }}/tomcat"
    tomcat_base: "{{ ansible_env.HOME }}/instances"
    venv_home: "{{ ansible_env.HOME }}/virtualenv"
  roles:
    - role: source
      dependencies: [jdk, tomcat, supervisor]
    - role: tds
    - role: tds-modjk
    - role: tomcat-cluster
      instances: "{{ tds }}"
    - role: supervisor-tds
  tasks:
    - include_tasks: ../../utils/test-authentication.yml
      vars:
        instances: "{{ tds }}"

    - name: start tds instances
      supervisorctl:
        name: "{{ item.name }}"
        state: started
        username: "{{ supervisor_user | default(omit) }}"
        password: "{{ supervisor_password | default(omit) }}"
        supervisorctl_path: "{{ supervisor_bin }}/supervisorctl"
      with_items: "{{ tds }}"

    - name: restart tds instances
      supervisorctl:
        name: "{{ item.name }}"
        state: restarted
        username: "{{ supervisor_user | default(omit) }}"
        password: "{{ supervisor_password | default(omit) }}"
        supervisorctl_path: "{{ supervisor_bin }}/supervisorctl"
      with_items: "{{ tds }}"
      tags: [never, restart, update_catalogs]

# - hosts: hostA
#   roles:
#     - role: logstash
#       logstash_home: "{{ ansible_env.HOME }}/tomcat"
#       logstash_pipeline: "pipeline.conf"
