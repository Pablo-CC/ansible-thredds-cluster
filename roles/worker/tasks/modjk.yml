- name: Add workers to the load balancer
  blockinfile:
    marker: "# {mark} worker_{{ ansible_hostname }}_{{ item.port }}"
    path: "{{ hostvars[load_balancer].mod_jk_conf }}/mod_jk.workers"
    block: |
      worker.{{ name }}.type=ajp13
      worker.{{ name }}.host={{ worker_host | default(ansible_hostname) }}
      worker.{{ name }}.port={{ item.port }}
  delegate_to: "{{ load_balancer }}"
  vars:
    ansible_become: "{{ hostvars[load_balancer].ansible_become | default(False) }}" # depends on how httpd was installed
    name: "{{ ansible_hostname ~ '_' ~ item.port }}"
  with_items: "{{ tomcats }}"

- name: Add workers to the restricted balancer
  lineinfile:
    path: "{{ hostvars[load_balancer].mod_jk_conf }}/mod_jk.workers"
    insertafter: "# END restrictedAccess"
    line: worker.restrictedAccess.balance_workers={{ ansible_hostname ~ '_' ~ item.port }}
  delegate_to: "{{ load_balancer }}"
  vars:
    ansible_become: "{{ hostvars[load_balancer].ansible_become | default(False) }}" # depends on how httpd was installed
  with_items: "{{ tomcats }}"

- name: Add workers to the load balancer cluster
  lineinfile:
    dest: "{{ hostvars[load_balancer].mod_jk_conf }}/mod_jk.workers"
    state: present
    line: worker.{{ item.1 }}.balance_workers={{ ansible_hostname ~ '_' ~ item.0.port }}
  delegate_to: "{{ load_balancer }}"
  vars:
    ansible_become: "{{ hostvars[load_balancer].ansible_become | default(False) }}" # depends on how httpd was installed
  with_subelements: 
    - "{{ tomcats }}"
    - clusters
