- name: Copy TdsClusterAuthorizer in every instance
  copy:
    src: TdsClusterAuthorizer{{ tds_major_version }}.class
    dest: "{{ tomcat_base }}/{{ item.name }}/webapps/thredds/WEB-INF/classes/thredds/servlet/restrict/TdsClusterAuthorizer{{ tds_major_version }}.class"
  with_items: "{{ tds_instances }}"

- name: Substitute TomcatAuthorizer by TdsClusterAuthorizer in applicationContext.xml (for TDS 5)
  replace:
    regexp: '<bean id="restrictedDatasetAuthorizer" class="thredds.servlet.restrict.TomcatAuthorizer">'
    replace: '<bean id="restrictedDatasetAuthorizer" class="thredds.servlet.restrict.TdsClusterAuthorizer{{ tds_major_version }}">'
    path: "{{ tomcat_base }}/{{ item.name }}/webapps/thredds/WEB-INF/applicationContext.xml"
  with_items: "{{ tds_instances }}"
  when: tds_major_version == 5|string

- name: Substitute TomcatAuthorizer by TdsClusterAuthorizer in web.xml (for TDS 4)
  replace:
    regexp: TomcatAuthorizer
    replace: TdsClusterAuthorizer{{ tds_major_version }}
    path: "{{ tomcat_base }}/{{ item.name }}/webapps/thredds/WEB-INF/web.xml"
  with_items: "{{ tds_instances }}"
  when: tds_major_version == 4|string

# TODO Should I create a lookup plugin called "unique_subelements" in order to prevent repetition?
- name: Copy tds static files
  include_tasks: tds-static-files.yml
  run_once: True
  loop_control:
    loop_var: connector
  with_subelements:
    - "{{ tds_instances }}"
    - connectors

# We are going to write to the same file in a remote host, so we need to
# simulate serial, https://github.com/ansible/ansible/issues/12170#issuecomment-372263149
- name: Add workers to the gateway
  include_tasks: jk_workers.yml
  with_items: "{{ ansible_play_batch }}"
  when: "hostvars[host_item].inventory_hostname == inventory_hostname"
  loop_control:
    loop_var: host_item

- name: Set jvmRoute in tds instances
  replace:
    path: "{{ tomcat_base }}/{{ item.0.name }}/conf/server.xml"
    regexp: "<Engine(?!(.*)jvmRoute)(.*)>"
    replace: <Engine\2 jvmRoute="{{ worker_name }}">
  vars:
    worker_name: "{{ item.0.tds_debug is not defined | ternary([ansible_hostname, item.1.port]|to_uuid, [ansible_hostname, item.1.port]|join('_')) }}"
  with_subelements:
    - "{{ tds_instances }}"
    - connectors
  when: item.1.protocol.lower().startswith("ajp")
