- name: Create httpd_server_root and httpd_src
  file:
    dest: "{{ item }}"
    state: directory
  with_items:
    - "{{ httpd_server_root }}"
    - "{{ httpd_src }}"
    - "{{ httpd_server_root }}/conf.d"

- name: Download httpd dependencies
  run_once: true
  local_action: get_url
  args:
    url: "{{ item }}"
    dest: "/tmp"
  tags: build
  with_items:
    - "{{ apr_download_url }}"
    - "{{ apr_util_download_url }}"
    - "{{ pcre_download_url }}"
    - "{{ httpd_download_url }}"

- name: Unarchive dependencies in remote host
  unarchive:
    src: "/tmp/{{ item }}"
    dest: "{{ httpd_src }}"
  tags: build
  with_items:
    - "{{ apr_filename }}"
    - "{{ apr_util_filename }}"
    - "{{ pcre_filename }}"
    - "{{ httpd_filename }}"

- name: Install apr
  command: "{{ item }}"
  args:
    chdir: "{{ httpd_src }}/{{ apr_filename_unarchive }}"
  tags: build
  async: 600
  poll: 10
  with_items:
    - "./configure --prefix={{ apr_install_base }}"
    - "make"
    - "make install"
    - "make clean"
    
- name: Install apr_util
  command: "{{ item }}"
  args:
    chdir: "{{ httpd_src }}/{{ apr_util_filename_unarchive }}"
  tags: build
  async: 600
  poll: 10
  with_items:
    - "./configure --prefix={{ apr_util_install_base }} --with-apr={{ apr_install_base }}"
    - "make"
    - "make install"
    - "make clean"

- name: Install pcre
  command: "{{ item }}"
  args:
    chdir: "{{ httpd_src }}/{{ pcre_filename_unarchive }}"
  tags: build
  async: 600
  poll: 10
  with_items:
    - "./configure --prefix={{ pcre_install_base }}"
    - "make"
    - "make install"
    - "make clean"

- name: Install httpd
  command: "{{ item }}"
  args:
    chdir: "{{ httpd_src }}/{{ httpd_filename_unarchive }}"
  tags: build
  async: 600
  poll: 10
  with_items:
    - ./configure --prefix={{ httpd_server_root }} --enable-mpms-shared=all --with-apr={{ apr_install_base }} --with-apr-util={{ apr_util_install_base }} --with-pcre={{ pcre_install_base }}
    - /usr/bin/make
    - /usr/bin/make install
    - /usr/bin/make clean

- name: Insert HTTPD_HOME in .bashrc 
  lineinfile:
    dest: "~/.bashrc"
    line: "export HTTPD_HOME={{ httpd_server_root }}"

# Create conf.d directory in httpd_home
- name: Create modules directories
  file:
    dest: "{{ item }}"
    state: directory
  with_items:
    - "{{ httpd_confd }}"
    - "{{ httpd_document_root }}"

- name: Create password for proxy status web pages
  command: "{{ httpd_server_root }}/bin/htpasswd -b -c {{ httpd_server_root }}/.htpasswd {{ applications.proxy.status.user }} {{ applications.proxy.status.password }}"

#- name: Delete httpd_src directory
  #file:
    #dest: "{{ httpd_src }}"
    #state: absent