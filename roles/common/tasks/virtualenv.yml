- name: Check if virtualenv package exists 
  local_action: find
  args:
    path: "{{ local_download }}"
    patterns: virtualenv
  register: virtualenv_file

- name: Download virtualenv package
  local_action: get_url
  args:
    dest: "{{ local_download }}"
    url: "{{ venv_file_url }}"
  when:
    - virtualenv_file.matched == 0 

- name: Create {{ venv_home }}
  file:
    dest: "{{ venv_home }}"
    state: directory

# Unarchive virtual enviroment package from local host to remote host
- name: Unarchive virtualenv
  unarchive: 
    src: "{{ local_download }}/{{ venv_file_name }}"
    dest: "{{ venv_home }}"
  register: unarchive_virtualenv

# Create virtual enviroment in remote host only if it isn't created before
- name: Create virtualenv
  shell: python virtualenv.py {{ venv_home }}
  args:
    chdir: "{{ venv_home }}/{{ unarchive_venv_name }}"
  when: 
    - unarchive_virtualenv.changed

- name: Insert virtualenv in .bashrc file
  lineinfile:
    dest: "~/.bashrc"
    line: "source $WORK_HOME/{{ venv_name }}/bin/activate"