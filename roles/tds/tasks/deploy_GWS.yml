# Create directories for each GWS in tds_instance_path/tds_instance/content/thredds/gws/
- name: Create directories for each GWS in {{ tds_instance_path }}
  file:
    dest: "{{ tds_instance_path }}/tds_{{ item.name }}/content/thredds/gws/{{ item.catalog }}"
    state: directory
  with_items:
    - "{{ tds_instances }}"

# Create a generic catalog.xml for each TDS instance
- name: Create generic catalog.xml for each TDS instance
  copy:
    src: catalog.xml
    dest: "{{ tds_instance_path }}/tds_{{ item.name }}/content/thredds"
  with_items:
    - "{{ tds_instances }}"

# Create catalog.xml for each GWS
- name: Create catalog.xml in each GWS
  template: 
    src: catalog.xml.j2
    dest: "{{ tds_instance_path }}/tds_{{ item.0.name }}/content/thredds/gws/{{ item.1.name }}/catalog.xml"
  with_nested:
    - "{{ tds_instances }}"
    - "{{ catalogs }}"
  when:
    - item.0.catalog == item.1.name
  register: create_catalogs

- name: Link catalogs in the common catalog.xml
  blockinfile:
    dest: "{{ tds_instance_path }}/tds_{{ item.1.item.0.name }}/content/thredds/catalog.xml"
    marker: "# {mark} {{ item.0.name }}"
    insertbefore: "</catalog>"
    block: |
      <catalogRef xlink:title="{{ item.0.name }}" xlink:href="gws/{{ item.0.name }}/catalog.xml" name=""/>
  with_nested:
    - "{{ catalogs }}"
    - "{{ create_catalogs.results }}"
  when:
    - (item.1.skipped is not defined) and (item.0.name == item.1.item.1.name)
  notify: restart tds_instance

# Add GWS load balancer configuration to mod_jk.workers file   
- name: Configure GWS in mod_jk.workers
  blockinfile:
    dest: "$HTTPD_HOME/conf.d/mod_jk.workers"
    marker: "# {mark} GWS_{{ item.catalog }}"
    block: |
      worker.list=GWS_{{ item.catalog }}
      worker.GWS_{{ item.catalog }}.type=lb
  with_items:
    - "{{ tds_instances }}"
  delegate_to: hostC

# Add each instance configuration for GWS to mod_jk.workers file   
- name: Configure instances for GWS in mod_jk.workers
  blockinfile:
    dest: "$HTTPD_HOME/conf.d/mod_jk.workers"
    marker: "# {mark} GWS_{{ item.catalog }}_{{ inventory_hostname }}_{{ item.base_port }}"
    block: |
      worker.GWS_{{ item.catalog }}.balance_workers= {{ item.name }}

      worker.{{ item.name }}.type=ajp13
      worker.{{ item.name }}.host={{ item.ip_address }}
      worker.{{ item.name }}.port={{ item.ajp.port }}
  with_items:
    - "{{ tds_instances }}"
  delegate_to: hostC

# Add urimap for GWS in mod_jk.urimaps file   
- name: Configure urimap for GWS in mod_jk.urimaps
  blockinfile:
    dest: "$HTTPD_HOME/conf.d/mod_jk.urimaps"
    marker: "# {mark} GWS_{{ item.catalog }}"
    block: |
      /thredds/*/{{ item.catalog }}=GWS_{{ item.catalog }}
      /thredds/*/{{ item.catalog }}/*=GWS_{{ item.catalog }}
  with_items:
    - "{{ tds_instances }}"
  delegate_to: hostC

- name: restart httpd
  supervisorctl:
    name: httpd
    state: restarted
    supervisorctl_path: "{{ virtualenv_home }}/bin/supervisorctl"
    config: "{{ supervisor_etc }}/supervisord.conf"
  delegate_to: hostC