- name: Create dirs for instances
  file:
    path: "{{ tomcat_instances_path }}/{{ instance.name }}/{{ item }}"
    state: directory
  with_items:
    - logs
    - conf
    - webapps
    - temp

- name: Create soft links from instances to tomcat
  file:
    dest: "{{ tomcat_instances_path }}/{{ instance.name }}/{{ item }}"
    src: "{{ tomcat_catalina_home }}/{{ item }}"
    force: yes
    state: link
  with_items:
    - lib
    - jre

- name: Copy web.xml
  copy:
    src: web.xml
    dest: "{{ tomcat_instances_path }}/{{ instance.name }}/conf/web.xml"

- name: Copy server.xml 
  template:
    src: "{{ item }}"
    dest: "{{ tomcat_instances_path }}/{{ instance.name }}/conf/server.xml"
  with_first_found:
#    - "{{ playbook_dir }}/{{ instance.files.server_j2 }}"
    - "{{ role_path }}/templates/server.xml.j2"

- name: Copy context.xml
  copy:
    src: "{{ item }}"
    dest: "{{ tomcat_instances_path }}/{{ instance.name }}/conf/context.xml"
  with_first_found:
    - "{{ playbook_dir }}/{{ instance.files.context }}"
    - "{{ role_path }}/files/context.xml"

- template:
    src: tomcat-users.xml.j2
    dest: "{{ tomcat_instances_path }}/{{ instance.name }}/conf/tomcat-users.xml"

- name: Register connectors in proxy
  blockinfile:
    marker: "# {mark} worker_{{ ansible_hostname }}_{{ item.port }}"
    dest: "{{ hostvars[item.proxy].mod_jk_conf_path }}/mod_jk.workers"
    block: |
      worker.{{ ansible_hostname }}_{{ item.port }}.type=ajp13
      worker.{{ ansible_hostname }}_{{ item.port }}.host={{ ansible_host }}
      worker.{{ ansible_hostname }}_{{ item.port }}.port={{ item.port }}
  delegate_to: "{{ item.proxy }}"
  with_items:
    - "{{ instance.connectors }}"
  when: item.type == "ajp"
