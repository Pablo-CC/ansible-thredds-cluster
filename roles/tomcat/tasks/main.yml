---
- name: Create directories for tomcat
  file:
    dest: "{{ item }}"
    state: directory
  with_items:
    - "{{ tomcat_catalina_home }}"
    - "{{ jre_install_base }}"

- name: Download dependencies
  run_once: True
  local_action: get_url
  args:
    url: "{{ item.url }}"
    dest: "/tmp/{{ item.filename }}"
    headers: "{{ item.header }}"
  with_items:
    - { url: "{{ jre_download_url }}", filename: "{{ jre_filename }}", header: "{{ jre_header }}" }
    - { url: "{{ tomcat_download_url }}", filename: "{{ tomcat_filename }}", header: "" }
    - { url: "{{ derby_db_download_url }}", filename: "{{ derby_db_filename }}", header: "" }

- name: Unarchive file in remote host
  unarchive:
    src: "/tmp/{{ item.filename }}"
    dest: "{{ item.dest }}"
    extra_opts:
      --strip-components=1
  with_items:
    - { filename: "{{ tomcat_filename }}", dest: "{{ tomcat_catalina_home }}" }
    - { filename: "{{ jre_filename }}", dest: "{{ jre_install_base }}" }
    - { filename: "{{ derby_db_filename }}", dest: "{{ tomcat_catalina_home }}/" }

- name: Insert JRE_HOME variable in .bashrc file
  lineinfile:
    dest: "~/.bashrc"
    line: "export JRE_HOME={{ jre_install_base }}"

#- name: Secure tomcat passwords
#  shell: "{{ tomcat_catalina_home }}/bin/digest.sh -a 'SHA' {{ applications.tds[item.1.name].password }}"
#  environment:
#    JRE_HOME: "{{ jre_install_base }}"
#  with_subelements:
#    - "{{ deployment.tomcat_instances }}"
#    - gws
#  register: "tomcat_passwords"

- name: Create tomcat_instances_path
  file: 
    dest: "{{ tomcat_instances_path }}"
    state: directory

- name: Create directory for each tomcat instance
  file:
    dest: "{{ tomcat_instances_path }}/{{ item.name }}"
    state: directory
  with_items:
    - "{{ deployment.tds_instances }}"
    - "{{ deployment.tap_instances }}"

- name: Configure each instance
  include_tasks: instance.yml
  loop_control:
    loop_var: instance
  with_items:
    - "{{ deployment.tds_instances }}"
    - "{{ deployment.tap_instances }}"

- name: Create directories for each GWS in tomcat_catalina_home
  #become: True
  file:
    dest: "{{ tomcat_catalina_home }}/content/thredds/gws/{{ item.name }}"
    state: directory
    #mode: "{{ item.mode | default('2775') }}"
    #owner: "{{ item.owner | default(ansible_user) }}"
    #group: "{{ item.group | default(ansible_user) }}"
  with_items: "{{ deployment.gws }}"

- include_tasks: tds_instance.yml
  with_items: "{{ deployment.tds_instances }}"
  loop_control:
    loop_var: instance

- include_tasks: tap_instance.yml
  with_items: "{{ deployment.tap_instances }}"
  loop_control:
    loop_var: instance

- name: Register tds workers in proxy
  include: deploy_tds_workers.yml
  with_subelements:
    - "{{ deployment.tds_instances }}"
    - gws
  loop_control:
    loop_var: agws

- name: Register tap workers in proxy
  include: deploy_tap_workers.yml
  with_subelements:
    - "{{ deployment.tap_instances }}"
    - gws
  loop_control:
    loop_var: agws

- name: Create Tomcat instances configuration in the supervisord
  include_tasks: supervisord_configuration.yml

# Publish catalogs
- name: Copy catalogs
  synchronize:
    src: "{{ item.src }}/"
    dest: "{{ tomcat_catalina_home }}/content/thredds/gws/{{ item.gws }}/"
    archive: False
    recursive: True
  with_items: "{{ data.catalogs }}"
  tags: update_catalogs
  notify: restart tomcat_instance

# This task could be done above with --owner, but rsync does not support it until version 3.1
- name: Set owner of every catalog in the gws
  #become: True
  file: 
    path: "{{ tomcat_catalina_home }}/content/thredds/gws/{{ item.gws }}"
    #owner: "{{ item.owner }}"
    recurse: True
    state: directory
  with_items: "{{ data.catalogs }}"
  when: item.owner is defined

- name: Copy datasets 
  synchronize:
    src: "{{ item.src }}/"
    dest: "{{ tomcat_catalina_home }}/content/thredds/public/{{ item.dest | default('') }}/"
    archive: False
    recursive: True
  with_items: "{{ data.datasets }}"
  tags: update_catalogs
  notify: restart tomcat_instance

# This task could be done above with --owner, but rsync does not support it until version 3.1
#- name: Set owner of every dateset
  #become: True
  #shell: "chown -R {{ item.owner }}: {{ tomcat_catalina_home }}/content/thredds/public/*"
  #with_items: "{{ data.datasets }}"
  #when: item.owner is defined
