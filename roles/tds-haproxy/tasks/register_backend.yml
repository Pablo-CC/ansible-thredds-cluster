- name: Register at HAProxy into main catalog's backend
  vars:
    ansible_become: "{{ hostvars[item.gateway].ansible_become | default(False)  }}" #Depends on how HAProxy was installed
  blockinfile:
    marker: "\t#{mark} {{ ansible_hostname }}'s register in catalog's backend"
    path: "{{ hostvars[item.gateway].haproxy_conf }}"
    block: "\tserver {{ ansible_hostname }} {{ item.host  }}:{{ item.port }} cookie {{ ansible_hostname }} check"
    insertafter: "backend {{ hostvars[item.gateway].catalog_backend }}"
  delegate_to: "{{ item.gateway }}"
  with_items: "{{ replicas }}"

- name: Register at HAProxy into restritedAccess backend
  vars:
    ansible_become: "{{ hostvars[item.gateway].ansible_become | default(False)  }}" #Depends on how HAProxy was installed
  blockinfile:
    marker: "\t#{mark} {{ ansible_hostname }}'s register in restrictedAccess backend"
    path: "{{ hostvars[item.gateway].haproxy_conf }}"
    block: "\tserver {{ ansible_hostname }} {{ item.host  }}:{{ item.port }} cookie {{ ansible_hostname }} check"
    insertafter: "backend {{ hostvars[item.gateway].restricted_backend }}"
  delegate_to: "{{ item.gateway }}"
  with_items: "{{ replicas }}"

- name: Register at collections' specific backend 
  vars:
    ansible_become: "{{ hostvars[item.gateway].ansible_become | default(False)  }}" #Depends on how HAProxy was installed
  blockinfile:
    marker: "\t#{mark} {{ ansible_hostname }}'s register in {{ item.collection.path | replace('/', '-') }} backend"
    path: "{{ hostvars[item.gateway].haproxy_conf }}"
    block: "\t server {{ ansible_hostname }} {{ item.host }}:{{ item.port }} cookie {{ ansible_hostname }} check"
    insertafter: "backend {{ item.collection.path | replace('/', '-') }}"
  delegate_to: "{{ item.gateway }}"
 with_items: "{{ replicas }}"
