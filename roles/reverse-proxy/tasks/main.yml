- name: Download mod_jk connector
  get_url:
    url: http://apache.mirrors.tds.net/tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.42-src.tar.gz
    dest: "{{ downloads_path }}"

- name: Unpack mod_jk
  unarchive: 
    src: "{{ downloads_path}}/tomcat-connectors-1.2.42-src.tar.gz"
    dest: "{{ unpack_path }}"
    remote_src: True

- name: Install mod_jk
  command: "{{ item }}"
  args:
    chdir: "{{unpack_path}}/tomcat-connectors-1.2.42-src/native"
  with_items:
    - ./configure --prefix={{httpd_path}}/modules --with-apxs={{httpd_path}}/bin/apxs
    - /usr/bin/make
    - /usr/bin/make install

- name: Enable apache modules
  blockinfile: 
    dest: "{{ httpd_path }}/conf/httpd.conf" 
    marker: "## {mark} Enable apache modules"
    block: |
        LoadModule request_module modules/mod_request.so
        LoadModule include_module modules/mod_include.so
        LoadModule proxy_module modules/mod_proxy.so
        LoadModule proxy_connect_module modules/mod_proxy_connect.so
        LoadModule proxy_ftp_module modules/mod_proxy_ftp.so
        LoadModule proxy_http_module modules/mod_proxy_http.so
        LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so
        LoadModule proxy_scgi_module modules/mod_proxy_scgi.so
        LoadModule proxy_fdpass_module modules/mod_proxy_fdpass.so
        LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
        LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
        LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
        LoadModule proxy_express_module modules/mod_proxy_express.so
        LoadModule proxy_hcheck_module modules/mod_proxy_hcheck.so
        LoadModule session_module modules/mod_session.so
        LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so
        LoadModule lbmethod_bytraffic_module modules/mod_lbmethod_bytraffic.so
        LoadModule lbmethod_bybusyness_module modules/mod_lbmethod_bybusyness.so
        LoadModule lbmethod_heartbeat_module modules/mod_lbmethod_heartbeat.so
        LoadModule rewrite_module modules/mod_rewrite.so
        LoadModule vhost_alias_module modules/mod_vhost_alias.so
        LoadModule watchdog_module modules/mod_watchdog.so
        LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
        LoadModule jk_module modules/mod_jk.so
        #LoadModule cache_module modules/mod_cache.so

    state: present
  notify:
    - restart apache2

- name: Enable proxy related modules
  apache2_module: 
    name: "{{ item }}" 
    state: present
  with_items:
    - alias
    #- ratelimit
    - rewrite
    - headers
    - proxy_ajp
    - proxy_balancer
    - proxy_connect
    #- proxy_express
    - proxy_ftp
    #- proxy_html
    - proxy_http
    #- proxy_scgi
    #- proxy_wstunnel
    #- ssl
    - vhost_alias
    - watchdog
    #- xml2enc
  notify: 
    - restart apache2

- name: Configure jk module
  blockinfile:
    dest: "{{httpd_path}}/conf/httpd.conf"
    marker: "## {mark} Enable jk module"
    block: |
        <IfModule mod_jk.c>
           JkWorkersFile {{httpd_path}}/conf/workers.properties
           JkShmFile     {{httpd_path}}/logs/mod_jk.shm
           JkLogFile     {{httpd_path}}/logs/mod_jk.log
           JkLogLevel    info
           JkLogStampFormat "[%a %b %d %H:%M:%S %Y] "
           JkMount /thredds/* lb
           JkMount /status/* jk-manager
        </IfModule>
  notify:
    - restart apache2

- name: Configure workers.properties
  template:
    src: workers.properties.j2
    dest: "{{httpd_path}}/conf/workers.properties"
  notify:
    - restart apache2

- name: Configure reverse proxy 
  blockinfile:
    dest: "{{httpd_path}}/conf/httpd.conf"
    marker: "## {mark} Enable reverse proxy"
    block: |
        <IfModule mod_proxy.c>
            ProxyRequests Off
            <Proxy *>
            Order allow,deny
            Allow from all
            </Proxy>

            ProxyPass /reverse_proxy http://{{ ip_address_centos7 }}:{{ httpd_port_centos7}}
            ProxyPassReverse /reverse_proxy http://{{ ip_address_centos7 }}:{{ httpd_port_centos7 }}
        </IfModule>
  notify:
    - restart apache2


- name: Enabling Status Support
  blockinfile:
    dest: "{{httpd_path}}/conf/httpd.conf"
    marker: "## {mark} Enable server status"
    block: |
        
        <IfModule mod_status.c>
            <Location "/server-status">
                SetHandler server-status
                Allow from all
            </Location>

        </IfModule>
        
  notify:
    - restart apache2