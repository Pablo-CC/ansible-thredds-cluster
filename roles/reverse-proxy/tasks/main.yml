- name: Enable apache modules
  blockinfile: 
    dest: "{{ httpd_path }}/conf/httpd.conf" 
    marker: "## {mark} Enable apache modules"
    block: |
        LoadModule request_module modules/mod_request.so
        LoadModule include_module modules/mod_include.so
        LoadModule proxy_module modules/mod_proxy.so
        LoadModule proxy_connect_module modules/mod_proxy_connect.so
        LoadModule proxy_ftp_module modules/mod_proxy_ftp.so
        LoadModule proxy_http_module modules/mod_proxy_http.so
        LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so
        LoadModule proxy_scgi_module modules/mod_proxy_scgi.so
        LoadModule proxy_fdpass_module modules/mod_proxy_fdpass.so
        LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
        LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
        LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
        LoadModule proxy_express_module modules/mod_proxy_express.so
        LoadModule proxy_hcheck_module modules/mod_proxy_hcheck.so
        LoadModule session_module modules/mod_session.so
        LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so
        LoadModule lbmethod_bytraffic_module modules/mod_lbmethod_bytraffic.so
        LoadModule lbmethod_bybusyness_module modules/mod_lbmethod_bybusyness.so
        LoadModule lbmethod_heartbeat_module modules/mod_lbmethod_heartbeat.so
        LoadModule rewrite_module modules/mod_rewrite.so
        LoadModule vhost_alias_module modules/mod_vhost_alias.so
        LoadModule watchdog_module modules/mod_watchdog.so
        LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
        #LoadModule cache_module modules/mod_cache.so

    state: present
  notify:
    - restart apache2

- name: Enable proxy related modules
  apache2_module: 
    name: "{{ item }}" 
    state: present
  with_items:
    - alias
    #- ratelimit
    - rewrite
    - headers
    - proxy_ajp
    - proxy_balancer
    - proxy_connect
    #- proxy_express
    - proxy_ftp
    #- proxy_html
    - proxy_http
    #- proxy_scgi
    #- proxy_wstunnel
    #- ssl
    - vhost_alias
    - watchdog
    #- xml2enc
  notify: 
    - restart apache2

- name: Configure reverse proxy 
  blockinfile:
    dest: "{{httpd_path}}/conf/httpd.conf"
    marker: "## {mark} Enable reverse proxy"
    block: |
        <IfModule mod_proxy.c>
            ProxyRequests Off
            <Proxy *>
            Order allow,deny
            Allow from all
            </Proxy>

            ProxyPass /reverse_proxy http://{{ ip_address_client }}:{{ httpd_port_client }}
            ProxyPassReverse /reverse_proxy http://{{ ip_address_client }}:{{ httpd_port_client }}
        </IfModule>
  notify:
    - restart apache2

- name: Enabling Status Support
  blockinfile:
    dest: "{{httpd_path}}/conf/httpd.conf"
    marker: "## {mark} Enable server status"
    block: |
        
        <IfModule mod_status.c>
            <Location "/server-status">
                SetHandler server-status
                Allow from all
            </Location>

        </IfModule>
        
  notify:
    - restart apache2

- name: Enabling Load-Balancing
  blockinfile:
    dest: "{{httpd_path}}/conf/httpd.conf"
    marker: "## {mark} Enable load-balancing"
    block: |
        
        <IfModule mod_proxy_balancer.c>
            <Location "/balancer-manager">
                SetHandler balancer-manager
                Allow from all
            </Location>

            <Proxy balancer://mycluster>
            # Server 1
            BalancerMember http://{{ip_address_w1}}:{{httpd_port_w1}}
            
            # Server 2
            BalancerMember http://{{ip_address_w2}}:{{httpd_port_w2}}
            </Proxy>

            ProxyPass /test balancer://mycluster
            ProxyPassReverse /test balancer://mycluster
            
        </IfModule>
        
  notify:
    - restart apache2