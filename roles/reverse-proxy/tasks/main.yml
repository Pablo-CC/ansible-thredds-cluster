- name: Enable proxy related modules
  apache2_module: 
    name: "{{ item }}" 
    state: present
  with_items:
    - alias
    #- ratelimit
    - rewrite
    - headers
    - proxy_ajp
    - proxy_balancer
    - proxy_connect
    #- proxy_express
    - proxy_ftp
    #- proxy_html
    - proxy_http
    #- proxy_scgi
    #- proxy_wstunnel
    #- ssl
    - vhost_alias
    #- xml2enc
  notify: 
    - restart apache2

- stat: path=/etc/httpd/conf.d/reverse_proxy.conf
  register: reverse_file

- name: Create reverse.conf file if it doesn't exist
  file:
    dest: /etc/httpd/conf.d/reverse_proxy.conf
    state: touch
  when: reverse_file.stat.exists == false

- name: Configure reverse proxy 
  blockinfile:
    dest: /etc/httpd/conf.d/reverse_proxy.conf
    marker: "## {mark} Enable reverse proxy"
    block: |
        <IfModule mod_proxy.c>
            ProxyRequests Off
            <Proxy *>
            Order allow,deny
            Allow from all
            </Proxy>

            ProxyPass /reverse_proxy http://{{ ip_address_client }}:{{ httpd_port_client }}
            ProxyPassReverse /reverse_proxy http://{{ ip_address_client }}:{{ httpd_port_client }}
        </IfModule>
  notify:
    - restart apache2

- name: Enabling Status Support
  blockinfile:
    dest: /etc/httpd/conf.d/reverse_proxy.conf
    marker: "## {mark} Enable server status"
    block: |
        
        <IfModule mod_status.c>
            <Location "/server-status">
                SetHandler server-status
                Allow from all
            </Location>

        </IfModule>
        
  notify:
    - restart apache2

- name: Enabling Load-Balancing
  blockinfile:
    dest: /etc/httpd/conf.d/reverse_proxy.conf
    marker: "## {mark} Enable load-balancing"
    block: |
        
        <IfModule mod_proxy_balancer.c>
            <Location "/balancer-manager">
                SetHandler balancer-manager
                Allow from all
            </Location>

            <Proxy balancer://mycluster>
            # Server 1
            BalancerMember http://{{ip_address_w1}}:{{httpd_port_w1}}
            
            # Server 2
            BalancerMember http://{{ip_address_w2}}:{{httpd_port_w2}}
            </Proxy>

            ProxyPass /test balancer://mycluster
            ProxyPassReverse /test balancer://mycluster
            
        </IfModule>
        
  notify:
    - restart apache2