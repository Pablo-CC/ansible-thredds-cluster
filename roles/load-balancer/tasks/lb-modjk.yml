- import_tasks: httpd.yml

- set_fact:
    ansible_become: "{{ ansible_become | default(False) }}"
    httpd_htdocs: "{{ httpd_htdocs }}" # tds-modjk needs to copy static web files
    mod_jk_conf: "{{ mod_jk_conf }}" # tds-modjk needs to register workers in mod_jk.workers file
  tags: always

- name: Create {{ mod_jk_conf }}
  file: state=directory path="{{ mod_jk_conf }}"
    
- name: Reference mod_jk files from httpd.conf
  lineinfile: path="{{ httpd_conf_file }}" line="Include {{ mod_jk_conf }}/*.conf"
  
- name: Template mod_jk conf files
  template: src=modjk/{{ item }}.j2 dest="{{ mod_jk_conf }}/{{ item }}"
  with_items: [mod_jk.conf, mod_jk.workers, mod_jk.urimaps]
  
- name: Create password for proxy status web pages
  htpasswd: path="{{ mod_jk_status }}/.htpasswd" username="{{ mod_jk_status_user }}" password="{{ mod_jk_status_passwd }}"
  when:  mod_jk_status_user is defined and mod_jk_status_passwd is defined

# TDS
- name: Create htdocs/thredds folder
  file: state=directory path="{{ httpd_htdocs }}/thredds"

- name: Create configuration module for thredds
  template: src=modjk/thredds.conf.j2 dest="{{ mod_jk_conf }}/thredds.conf"

- name: Create thredds static configuration - serverInfo.html
  template: src=modjk/serverInfo.html.j2 dest="{{ httpd_htdocs }}/thredds/serverInfo.html"

- name: Add clusters (jk lb workers)
  blockinfile:
    dest: "{{ mod_jk_conf }}/mod_jk.workers"
    marker: "# {mark} {{ item.name }}"
    block: |
      worker.list={{ item.name }}
      worker.{{ item.name }}.type=lb
  with_items: "{{ clusters }}"

- name: Add cluster urimaps
  blockinfile:
    path: "{{ mod_jk_conf }}/mod_jk.urimaps"
    marker: "# {mark} {{ item.0.name~item.1 }}"
    block: |
      /thredds/{{ item.1 }}|/*={{ item.0.name }}
      {% if item.1 == "catalog" -%}
      /thredds|/*={{ item.0.name }}
      {% endif %}
  with_subelements:
    - "{{ clusters }}"
    - services

- name: Add restrictedAccess worker
  blockinfile:
    path: "{{ mod_jk_conf }}/mod_jk.workers"
    marker: "# {mark} restrictedAccess"
    block: |
      worker.list=restrictedAccess
      worker.restrictedAccess.type=lb
      worker.restrictedAccess.mount=/thredds/restrictedAccess/*
